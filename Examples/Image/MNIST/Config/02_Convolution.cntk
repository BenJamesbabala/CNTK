# Parameters can be overwritten on the command line
# for example: cntk configFile=myConfigFile rootDir=../.. 
# For running from Visual Studio add
# currentDirectory=$(SolutionDir)/<path to corresponding data folder> 

command = trainNetwork:testNetwork

precision = "float"; traceLevel = 1 ; deviceId = "auto"

rootDir = ".." ; configDir = "$rootDir$/Config" ; dataDir   = "$rootDir$/Data" ;
outputDir = "$rootDir$/Output" ; modelDir  = "$outputDir$/Models"

modelPath = "$modelDir$/02_Convolution"

# uncomment the following line to write logs to a file
# stderr = "$outputDir$/02_Convolution_out"

# TRAINING CONFIG
trainNetwork = [
    action = "train"

    BrainScriptNetworkBuilder = {
        imageShape = 28:28:1                        # image dimensions, 1 channel only
        featScale = Constant(1/256)
        labelDim = 10                               # number of distinct labels

        model (features) = {
            featNorm = features.* featScale
            
            c1 = ConvolutionalLayer {16, (5:5), pad = true} (featNorm)
            p1 = MaxPoolingLayer {(2:2), stride=(2:2)} (c1)
            c2 = ConvolutionalLayer {32, (5:5), pad = true} (p1)
            p2 = MaxPoolingLayer {(2:2), stride=(2:2)} (c2)
            
            h1 = DenseLayer {128, activation=Sigmoid} (p2)
            ol = LinearLayer {labelDim} (h1)
        }.ol

        # inputs
        features = Input {imageShape}
        labels = Input {labelDim}

        # apply model to features
        ol = model (features)

        # loss and error computation
        ce   = CrossEntropyWithSoftmax (labels, ol)
        errs = ClassificationError (labels, ol)

        # declare special nodes
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (ol)
    }

    SGD = [
        epochSize = 60000
        
        maxEpochs = 15
        minibatchSize = 32
        learningRatesPerSample = 0.003125*5:0.1 #0.09375
        momentumAsTimeConstant = 0*10:1024
        
        firstMBsToShowResult = 5 ; numMBsToShowResult = 500
    ]

    reader = [
        readerType = "CNTKTextFormatReader"
        # See ../REAMDE.md for details on getting the data (Train-28x28_cntk_text.txt).
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]    
]

# TEST CONFIG
testNetwork = [
    action = test
    minibatchSize = 1024    # reduce this if you run out of memory

    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
            dim = 784
            format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
